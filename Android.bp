// This file is generated by cargo2android.py --run --device --dependencies --tests --patch=patches/Android.bp.patch.

package {
    default_applicable_licenses: ["external_rust_crates_url_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
//
// large-scale-change included anything that looked like it might be a license
// text as a license_text. e.g. LICENSE, NOTICE, COPYING etc.
//
// Please consider removing redundant or irrelevant files from 'license_text:'.
// See: http://go/android-license-faq
license {
    name: "external_rust_crates_url_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
        "SPDX-license-identifier-MIT",
    ],
    license_text: [
        "LICENSE-APACHE",
        "LICENSE-MIT",
    ],
}

rust_library {
    name: "liburl",
    host_supported: true,
    crate_name: "url",
    srcs: ["src/lib.rs"],
    edition: "2018",
    rustlibs: [
        "libform_urlencoded",
        "libidna",
        "libmatches",
        "libpercent_encoding",
    ],
    apex_available: [
        "//apex_available:platform",
        "com.android.resolv",
    ],
    min_sdk_version: "29",
}

rust_defaults {
    name: "url_defaults",
    crate_name: "url",
    srcs: ["src/lib.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    edition: "2018",
    rustlibs: [
        "libbencher",
        "libform_urlencoded",
        "libidna",
        "libmatches",
        "libpercent_encoding",
        "libserde_json",
    ],
}

rust_test_host {
    name: "url_host_test_src_lib",
    defaults: ["url_defaults"],
}

rust_test {
    name: "url_device_test_src_lib",
    defaults: ["url_defaults"],
}

// dependent_library ["feature_list"]
//   bencher-0.1.5
//   form_urlencoded-1.0.0
//   idna-0.2.0
//   itoa-0.4.6
//   matches-0.1.8
//   percent-encoding-2.1.0
//   ryu-1.0.5
//   serde-1.0.118 "std"
//   serde_json-1.0.60 "default,std"
//   tinyvec-1.1.0 "alloc,default,tinyvec_macros"
//   tinyvec_macros-0.1.0
//   unicode-bidi-0.3.4 "default"
//   unicode-normalization-0.1.16 "default,std"
